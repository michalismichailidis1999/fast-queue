#pragma once
#include <chrono>
#include <string>

static const std::string VERSION = "1.0.0";
static const int VERSION_INT_FORMAT = 0b00000000'00000001'00000000'00000000;

static const std::string FILE_EXTENSION = ".txt";

static const std::string CLUSTER_METADATA_QUEUE_NAME = "__cluster_metadata";

static const int HEARTBEAT_SIGNAL_MIN_BOUND = 1500;
static const int HEARTBEAT_SIGNAL_MAX_BOUND = 5000;
static const int LEADER_TIMEOUT = 1000;
static const int APPEND_ENTRIES_MAX_BATCH_SIZE = 20;

static const int MAX_QUEUE_NAME_CHARS = 100;

static const int MAX_QUEUE_PARTITIONS = 1000;

static const int TOTAL_METADATA_BYTES = sizeof(long);
static const int TOTAL_METADATA_BYTES_OFFSET = 0;
static const int VERSION_SIZE = sizeof(int);
static const int VERSION_SIZE_OFFSET = TOTAL_METADATA_BYTES + TOTAL_METADATA_BYTES_OFFSET;
static const int CHECKSUM_SIZE = sizeof(unsigned long long);
static const int CHECKSUM_OFFSET = VERSION_SIZE + VERSION_SIZE_OFFSET;
static const int COMMON_METADATA_TOTAL_BYTES = TOTAL_METADATA_BYTES + VERSION_SIZE + CHECKSUM_SIZE;

static const int MESSAGE_ID_SIZE = sizeof(unsigned long long); // will be message offset or metadata version of cluster
static const int MESSAGE_ID_OFFSET = COMMON_METADATA_TOTAL_BYTES;
static const int MESSAGE_TIMESTAMP_SIZE = sizeof(unsigned long long);
static const int MESSAGE_TIMESTAMP_OFFSET = MESSAGE_ID_SIZE + MESSAGE_ID_OFFSET;
static const int MESSAGE_TOTAL_BYTES = COMMON_METADATA_TOTAL_BYTES + MESSAGE_ID_SIZE + MESSAGE_TIMESTAMP_SIZE;

static const int QUEUE_NAME_SIZE = MAX_QUEUE_NAME_CHARS * sizeof(char);
static const int QUEUE_NAME_OFFSET = COMMON_METADATA_TOTAL_BYTES;
static const int QUEUE_NAME_LENGTH_SIZE = sizeof(int);
static const int QUEUE_NAME_LENGTH_OFFSET = QUEUE_NAME_SIZE + QUEUE_NAME_OFFSET;
static const int QUEUE_PARTITIONS_SIZE = sizeof(int);
static const int QUEUE_PARTITIONS_OFFSET = QUEUE_NAME_LENGTH_SIZE + QUEUE_NAME_LENGTH_OFFSET;
static const int QUEUE_REPLICATION_FACTOR_SIZE = sizeof(int);
static const int QUEUE_REPLICATION_FACTOR_OFFSET = QUEUE_PARTITIONS_SIZE + QUEUE_PARTITIONS_OFFSET;
static const int QUEUE_METADATA_TOTAL_BYTES = COMMON_METADATA_TOTAL_BYTES + QUEUE_NAME_SIZE + QUEUE_NAME_LENGTH_SIZE + QUEUE_PARTITIONS_SIZE + QUEUE_REPLICATION_FACTOR_SIZE;

static const int PARTITION_ID_SIZE = sizeof(unsigned int);
static const int PARTITION_ID_OFFSET = COMMON_METADATA_TOTAL_BYTES;
static const int PARTITION_CURRENT_SEGMENT_SIZE = sizeof(unsigned long long);
static const int PARTITION_CURRENT_SEGMENT_OFFSET = PARTITION_ID_SIZE + PARTITION_ID_OFFSET;
static const int PARTITION_OLDEST_SEGMENT_SIZE = sizeof(unsigned long long);
static const int PARTITION_OLDEST_SEGMENT_OFFSET = PARTITION_CURRENT_SEGMENT_SIZE + PARTITION_CURRENT_SEGMENT_OFFSET;
static const int PARTITION_TOTAL_SEGMENTS_SIZE = sizeof(unsigned long long);
static const int PARTITION_TOTAL_SEGMENTS_OFFSET = PARTITION_OLDEST_SEGMENT_SIZE + PARTITION_OLDEST_SEGMENT_OFFSET;
static const int PARTITION_METADATA_TOTAL_BYTES = COMMON_METADATA_TOTAL_BYTES + PARTITION_ID_SIZE + PARTITION_CURRENT_SEGMENT_SIZE
+ PARTITION_OLDEST_SEGMENT_SIZE + PARTITION_TOTAL_SEGMENTS_SIZE;

static const int SEGMENT_ID_SIZE = sizeof(unsigned long long);
static const int SEGMENT_ID_OFFSET = COMMON_METADATA_TOTAL_BYTES;
static const int SEGMENT_OLDEST_MESSAGE_TMSTMP_SIZE = sizeof(long long);
static const int SEGMENT_OLDEST_MESSAGE_TMSTMP_OFFSET = SEGMENT_ID_SIZE + SEGMENT_ID_OFFSET;
static const int SEGMENT_NEWEST_MESSAGE_TMSTMP_SIZE = sizeof(long long);
static const int SEGMENT_NEWEST_MESSAGE_TMSTMP_OFFSET = SEGMENT_OLDEST_MESSAGE_TMSTMP_SIZE + SEGMENT_OLDEST_MESSAGE_TMSTMP_OFFSET;
static const int SEGMENT_OLDEST_MESSAGE_OFF_SIZE = sizeof(unsigned long long);
static const int SEGMENT_OLDEST_MESSAGE_OFF_OFFSET = SEGMENT_NEWEST_MESSAGE_TMSTMP_SIZE + SEGMENT_NEWEST_MESSAGE_TMSTMP_OFFSET;
static const int SEGMENT_NEWEST_MESSAGE_OFF_SIZE = sizeof(unsigned long long);
static const int SEGMENT_NEWEST_MESSAGE_OFF_OFFSET = SEGMENT_OLDEST_MESSAGE_OFF_SIZE + SEGMENT_OLDEST_MESSAGE_OFF_OFFSET;
static const int SEGMENT_IS_READ_ONLY_SIZE = sizeof(bool);
static const int SEGMENT_IS_READ_ONLY_OFFSET = SEGMENT_NEWEST_MESSAGE_OFF_SIZE + SEGMENT_NEWEST_MESSAGE_OFF_OFFSET;
static const int SEGMENT_IS_COMPACTED_SIZE = sizeof(bool);
static const int SEGMENT_IS_COMPACTED_OFFSET = SEGMENT_IS_READ_ONLY_SIZE + SEGMENT_IS_READ_ONLY_OFFSET;
static const int SEGMENT_METADATA_TOTAL_BYTES = COMMON_METADATA_TOTAL_BYTES + SEGMENT_ID_SIZE + SEGMENT_OLDEST_MESSAGE_TMSTMP_SIZE 
+ SEGMENT_NEWEST_MESSAGE_TMSTMP_SIZE + SEGMENT_OLDEST_MESSAGE_OFF_SIZE + SEGMENT_NEWEST_MESSAGE_OFF_SIZE
+ SEGMENT_IS_READ_ONLY_SIZE + SEGMENT_IS_COMPACTED_SIZE;

// Commands

static const int COMMAND_TYPE_SIZE = sizeof(int);
static const int COMMAND_TYPE_OFFSET = MESSAGE_TOTAL_BYTES;
static const int COMMAND_TERM_SIZE = sizeof(unsigned long long);
static const int COMMAND_TERM_OFFSET = COMMAND_TYPE_SIZE + COMMAND_TYPE_OFFSET;
static const int COMMAND_TOTAL_BYTES = MESSAGE_TOTAL_BYTES + COMMAND_TYPE_SIZE + COMMAND_TERM_SIZE;

static const int CQ_COMMAND_QUEUE_NAME_LENGTH_SIZE = sizeof(int);
static const int CQ_COMMAND_QUEUE_NAME_LENGTH_OFFSET = COMMAND_TOTAL_BYTES;
static const int CQ_COMMAND_QUEUE_NAME_SIZE = sizeof(char) * MAX_QUEUE_NAME_CHARS;
static const int CQ_COMMAND_QUEUE_NAME_OFFSET = CQ_COMMAND_QUEUE_NAME_LENGTH_SIZE + CQ_COMMAND_QUEUE_NAME_LENGTH_OFFSET;
static const int CQ_COMMAND_PARTITION_SIZE = sizeof(int);
static const int CQ_COMMAND_PARTITION_OFFSET = CQ_COMMAND_QUEUE_NAME_SIZE + CQ_COMMAND_QUEUE_NAME_OFFSET;
static const int CQ_COMMAND_REPLICATION_SIZE = sizeof(int);
static const int CQ_COMMAND_REPLICATION_OFFSET = CQ_COMMAND_PARTITION_SIZE + CQ_COMMAND_PARTITION_OFFSET;
static const int CQ_COMMAND_TOTAL_BYTES = COMMAND_TOTAL_BYTES + CQ_COMMAND_QUEUE_NAME_LENGTH_SIZE + CQ_COMMAND_QUEUE_NAME_SIZE
+ CQ_COMMAND_PARTITION_SIZE + CQ_COMMAND_REPLICATION_SIZE;

static const int PA_COMMAND_QUEUE_NAME_LENGTH_SIZE = sizeof(int);
static const int PA_COMMAND_QUEUE_NAME_LENGTH_OFFSET = COMMAND_TOTAL_BYTES;
static const int PA_COMMAND_QUEUE_NAME_SIZE = sizeof(char) * MAX_QUEUE_NAME_CHARS;
static const int PA_COMMAND_QUEUE_NAME_OFFSET = PA_COMMAND_QUEUE_NAME_LENGTH_SIZE + PA_COMMAND_QUEUE_NAME_LENGTH_OFFSET;
static const int PA_COMMAND_PARTITION_SIZE = sizeof(int);
static const int PA_COMMAND_PARTITION_OFFSET = PA_COMMAND_QUEUE_NAME_SIZE + PA_COMMAND_QUEUE_NAME_OFFSET;
static const int PA_COMMAND_TO_NODE_SIZE = sizeof(int);
static const int PA_COMMAND_TO_NODE_OFFSET = PA_COMMAND_PARTITION_SIZE + PA_COMMAND_PARTITION_OFFSET;
static const int PA_COMMAND_FROM_NODE_SIZE = sizeof(int);
static const int PA_COMMAND_FROM_NODE_OFFSET = PA_COMMAND_TO_NODE_SIZE + PA_COMMAND_TO_NODE_OFFSET;
static const int PA_COMMAND_TOTAL_BYTES = COMMAND_TOTAL_BYTES + PA_COMMAND_QUEUE_NAME_LENGTH_SIZE + PA_COMMAND_QUEUE_NAME_SIZE
+ PA_COMMAND_PARTITION_SIZE + PA_COMMAND_TO_NODE_SIZE + PA_COMMAND_FROM_NODE_SIZE;

static const int PLA_COMMAND_QUEUE_NAME_LENGTH_SIZE = sizeof(int);
static const int PLA_COMMAND_QUEUE_NAME_LENGTH_OFFSET = COMMAND_TOTAL_BYTES;
static const int PLA_COMMAND_QUEUE_NAME_SIZE = sizeof(char) * MAX_QUEUE_NAME_CHARS;
static const int PLA_COMMAND_QUEUE_NAME_OFFSET = PLA_COMMAND_QUEUE_NAME_LENGTH_SIZE + PLA_COMMAND_QUEUE_NAME_LENGTH_OFFSET;
static const int PLA_COMMAND_PARTITION_SIZE = sizeof(int);
static const int PLA_COMMAND_PARTITION_OFFSET = PLA_COMMAND_QUEUE_NAME_SIZE + PLA_COMMAND_QUEUE_NAME_OFFSET;
static const int PLA_COMMAND_NEW_LEADER_SIZE = sizeof(int);
static const int PLA_COMMAND_NEW_LEADER_OFFSET = PLA_COMMAND_PARTITION_SIZE + PLA_COMMAND_PARTITION_OFFSET;
static const int PLA_COMMAND_PREV_LEADER_SIZE = sizeof(int);
static const int PLA_COMMAND_PREV_LEADER_OFFSET = PLA_COMMAND_NEW_LEADER_SIZE + PLA_COMMAND_NEW_LEADER_OFFSET;
static const int PLA_COMMAND_TOTAL_BYTES = COMMAND_TOTAL_BYTES + PLA_COMMAND_QUEUE_NAME_LENGTH_SIZE + PLA_COMMAND_QUEUE_NAME_SIZE
+ PLA_COMMAND_PARTITION_SIZE + PLA_COMMAND_NEW_LEADER_SIZE + PLA_COMMAND_PREV_LEADER_SIZE;

// =================================================================