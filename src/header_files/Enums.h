#pragma once

enum class RequestType {
	CREATE_QUEUE = 1,
	DELETE_QUEUE,
	LIST_QUEUES,
	PRODUCER_CONNECT,
	PRODUCE,
	CONSUMER_CONNECT,
	CONSUME,
	ACK,
	LIST_BROKERS,
	BEGIN_TRANSACTION,
	COMMIT_TRANSACTION,
	GET_CONTROLLERS_CONNECTION_INFO,
	GET_CONTROLLER_LEADER_ID,

	// Internal
	DATA_NODE_HEARTBEAT,

	// Raft
	REQUEST_VOTE,
	APPEND_ENTRIES
};

enum class ErrorCode {
	NONE,
	INTERNAL_SERVER_ERROR,
	INCORRECT_REQUEST_BODY,
	INCORRECT_PARTITION_NUMBER,
	QUEUE_DOES_NOT_EXIST,
	INCORRECT_ACTION,
	INCORRECT_LEADER,
	PRODUCER_NOT_FOUND,
	INCORRECT_MESSAGE_COUNT,
	TOO_MANY_BYTES_RECEIVED,
	UNAUTHORIZED,
	TOO_FEW_AVAILABLE_NODES
};

enum class RequestValueKey {
	// Version 1
	
	// Hidden
	DEPTH_COUNT = -1,

	// External Communication
	USERNAME = 1,
	PASSWORD,
	REQUEST_TYPE,
	QUEUE_NAME, // should be followed after queue name length
	PARTITIONS,
	REPLICATION_FACTOR,
	TRANSACTIONAL_ID,
	TRANSACTION_ID,
	PRODUCER_ID,
	PRODUCER_EPOCH,
	PARTITION,
	MESSAGE,

	// Internal Communication
	NODE_ID,
	NODE_ADDRESS,
	NODE_PORT,

	// Raft
	LEADER_ID,
	CANDIDATE_ID,
	TERM,
	LAST_LOG_INDEX,
	LAST_LOG_TERM,
	PREV_LOG_INDEX,
	PREV_LOG_TERM,
	LEADER_COMMIT,
	COMMANDS
	// =====================================================
};

enum class ResponseValueKey {
	ERROR_MESSAGE,
	TERM,
	SUCCESS,
	VOTE_GRANTED,
	OK,
	LEADER_ID,
	CONTROLLER_CONNECTION_INFO,
	LAG_INDEX
};

enum class LogTraceType {
	DEBUG,
	INFO,
	WARN,
	ERR
};

enum class Status {
	UNKNOWN,
	PENDING_CREATION,
	ACTIVE,
	PENDING_DELETION
};

enum class CompressionAlgorithm {
	LZ4
};

enum class NodeState {
	FOLLOWER,
	CANDIDATE,
	LEADER
};

enum class MessageType {
	MESSAGE,
	MARKER
};

enum class CommandType {
	CREATE_QUEUE,
	DELETE_QUEUE,
	ALTER_PARTITION_ASSIGNMENT,
	ALTER_PARTITION_LEADER_ASSIGNMENT
};

enum class ObjectType {
	METADATA,
	MESSAGE,
	MARKER,
	BTREE_PAGE
};

enum class CommitMarkerStatus {
	COMMITED,
	ABORTED
};

// for BTree
enum class PageType {
	NON_LEAF,
	LEAF
};

enum class TriePageType {
	ROOT,
	EXTENSION
};

enum class CleanupPolicyType {
	DELETE_SEGMENTS = 0,
	COMPACT_SEGMENTS = 1
};